{
	"info": {
		"_postman_id": "c611370e-0068-4f52-a777-842f4362db5f",
		"name": "Order Management Platform",
		"description": "API for managing orders such as placing, canceling, and fetching history.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19551412"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "signup",
					"item": [
						{
							"name": "Sign up a new user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 400\", function () {",
											"    pm.expect(pm.response.code).to.equal(400);",
											"});",
											"",
											"",
											"pm.test(\"Response has the required Content-Type header with value application/json\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});",
											"",
											"",
											"pm.test(\"Response contains the email field\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.email).to.exist;",
											"});",
											"",
											"",
											"pm.test(\"Email field should not be empty\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData.email).to.exist.and.to.have.lengthOf.at.least(1, \"Email should not be empty\");",
											"});",
											"",
											"",
											"pm.test(\"Response time is less than 200ms\", function () {",
											"  pm.expect(pm.response.responseTime).to.be.below(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/signup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"signup"
									]
								}
							},
							"response": [
								{
									"name": "User successfully signed up",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<email>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"password\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/signup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"signup"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"email\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<email>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"password\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/signup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"signup"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": null
								},
								{
									"name": "User already exists",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<email>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"password\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/signup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"signup"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "{{baseUrl}}/users/signup",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"",
											"pm.test(\"Response has the required Content-Type header with value application/json\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});",
											"",
											"pm.test(\"Email field should not be empty\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData.data.email).to.exist.and.to.have.lengthOf.at.least(1, \"Email should not be empty\");",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"roshilashatharasinghe@gmail.com\",\n  \"firstName\": \"Roshila\",\n  \"lastName\": \"Hatharasinghe\",\n  \"password\": \"roshila@123\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/signup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"signup"
									]
								}
							},
							"response": []
						},
						{
							"name": "{{baseUrl}}/users/signup",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 409\", function () {",
											"    pm.expect(pm.response.code).to.equal(409);",
											"});",
											"",
											"",
											"pm.test(\"Response has the required Content-Type header with value application/json\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"roshilashatharasinghe@gmail.com\",\n  \"firstName\": \"Roshila\",\n  \"lastName\": \"Hatharasinghe\",\n  \"password\": \"roshila@123\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/signup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"signup"
									]
								}
							},
							"response": []
						},
						{
							"name": "{{baseUrl}}/users/signup",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 400\", function () {",
											"    pm.expect(pm.response.code).to.equal(400);",
											"});",
											"",
											"",
											"pm.test(\"Response has the required Content-Type header with value application/json\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});",
											"",
											"",
											"pm.test(\"Response contains the email field\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.email).to.exist;",
											"});",
											"",
											"",
											"pm.test(\"Email field should not be empty\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData.email).to.exist.and.to.have.lengthOf.at.least(1, \"Email should not be empty\");",
											"});",
											"",
											"",
											"pm.test(\"Response time is less than 200ms\", function () {",
											"  pm.expect(pm.response.responseTime).to.be.below(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"roshilaahatharasinghegmail.com\",\n  \"firstName\": \"Roshila\",\n  \"password\": \"roshila@123\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/signup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"signup"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "login",
					"item": [
						{
							"name": "Log in a user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Response status code is 401', function () {",
											"    pm.expect(pm.response.code).to.equal(401);",
											"})",
											"",
											"pm.test('Response has the required Content-Type header', function () {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
											"})",
											"",
											"pm.test('Data field should be null', function () {",
											"    const responseData = pm.response.json();",
											"    pm.expect(responseData.data).to.be.null;",
											"})",
											"",
											"pm.test('Response time is less than 200ms', function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(200);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"response": [
								{
									"name": "User successfully logged in",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"token\": \"<string>\",\n    \"expiresIn\": \"<integer>\"\n  }\n}"
								},
								{
									"name": "Invalid credentials",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": null
								},
								{
									"name": "User not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "{{baseUrl}}/users/login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Response status code is 200', function () {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"})",
											"",
											"pm.test('Response has the required Content-Type header', function () {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
											"})",
											"",
											"pm.test(\"data field should not be null\", function () {",
											"  const responseData = pm.response.json();",
											"",
											"  pm.expect(responseData).to.have.property('data').and.to.not.be.null;",
											"",
											"  if (Array.isArray(responseData.data)) {",
											"    pm.expect(responseData.data).to.have.lengthOf(2, \"data field should have 2 elements\");",
											"  }",
											"});",
											"",
											"pm.test('Response time is less than 200ms', function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(200);",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"roshilashatharasinghe@gmail.com\",\n  \"password\": \"roshila@123\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "{{baseUrl}}/users/login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Response status code is 401', function () {",
											"    pm.expect(pm.response.code).to.equal(401);",
											"})",
											"",
											"pm.test('Response has the required Content-Type header', function () {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
											"})",
											"",
											"pm.test('Data field should be null', function () {",
											"    const responseData = pm.response.json();",
											"    pm.expect(responseData.data).to.be.null;",
											"})",
											"",
											"pm.test('Response time is less than 200ms', function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(200);",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"roshilashatharasinghe@gmail.com\",\n  \"password\": \"roshila123\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "{{baseUrl}}/users/login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Response status code is 401', function () {",
											"    pm.expect(pm.response.code).to.equal(401);",
											"})",
											"",
											"pm.test('Response has the required Content-Type header', function () {",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
											"})",
											"",
											"pm.test('Data field should be null', function () {",
											"    const responseData = pm.response.json();",
											"    pm.expect(responseData.data).to.be.null;",
											"})",
											"",
											"pm.test('Response time is less than 200ms', function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(200);",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"roshilaahatharasinghe@gmail.com\",\n  \"password\": \"roshila@123\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "orders",
			"item": [
				{
					"name": "cancel",
					"item": [
						{
							"name": "{referenceNumber}",
							"item": [
								{
									"name": "Cancel an existing order in NEW state",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/orders/cancel/:referenceNumber",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"orders",
												"cancel",
												":referenceNumber"
											],
											"variable": [
												{
													"key": "referenceNumber",
													"value": "<string>",
													"description": "(Required) Reference number of the order to cancel"
												}
											]
										}
									},
									"response": [
										{
											"name": "Order canceled successfully",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/orders/cancel/:referenceNumber",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"orders",
														"cancel",
														":referenceNumber"
													],
													"variable": [
														{
															"key": "referenceNumber"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": null
										},
										{
											"name": "Order is already dispatched or cancelled",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/orders/cancel/:referenceNumber",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"orders",
														"cancel",
														":referenceNumber"
													],
													"variable": [
														{
															"key": "referenceNumber"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": null
										},
										{
											"name": "Order not found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/orders/cancel/:referenceNumber",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"orders",
														"cancel",
														":referenceNumber"
													],
													"variable": [
														{
															"key": "referenceNumber"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": null
										}
									]
								},
								{
									"name": "{{baseUrl}}/orders/cancel/:referenceNumber(20240926201703-1)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyb3NoaWxhc2hhdGhhcmFzaW5naGVAZ21haWwuY29tIiwiaWF0IjoxNzI3MzYxNTM0LCJleHAiOjE3MjczNjUxMzR9.zd1kY_Vxsq0g1Wlx8BCKfT_jC_UWJDDHECOhwmyDvaQ",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/orders/cancel/:referenceNumber",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"orders",
												"cancel",
												":referenceNumber"
											],
											"variable": [
												{
													"key": "referenceNumber",
													"value": "20240926201703-1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "{{baseUrl}}/orders/cancel/:referenceNumber",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyb3NoaWxhc2hhdGhhcmFzaW5naGVAZ21haWwuY29tIiwiaWF0IjoxNzI3MzYxNTM0LCJleHAiOjE3MjczNjUxMzR9.zd1kY_Vxsq0g1Wlx8BCKfT_jC_UWJDDHECOhwmyDvaQ",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/orders/cancel/:referenceNumber",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"orders",
												"cancel",
												":referenceNumber"
											],
											"variable": [
												{
													"key": "referenceNumber",
													"value": "1"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "getAll",
					"item": [
						{
							"name": "Fetch order history",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/orders/getAll?page=<integer>&size=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders",
										"getAll"
									],
									"query": [
										{
											"key": "page",
											"value": "<integer>",
											"description": "(Required) page of the order history"
										},
										{
											"key": "size",
											"value": "<integer>",
											"description": "(Required) Number of orders per page"
										}
									]
								}
							},
							"response": [
								{
									"name": "Successfully fetched order history",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/orders/getAll?page=<integer>&size=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"orders",
												"getAll"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>",
													"description": "(Required) page of the order history"
												},
												{
													"key": "size",
													"value": "<integer>",
													"description": "(Required) Number of orders per page"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"referenceNumber\": \"<string>\",\n    \"itemName\": \"<string>\",\n    \"quantity\": \"<integer>\",\n    \"shippingAddress\": \"<string>\",\n    \"status\": \"<string>\",\n    \"placementTimestamp\": \"<string>\"\n  },\n  {\n    \"referenceNumber\": \"<string>\",\n    \"itemName\": \"<string>\",\n    \"quantity\": \"<integer>\",\n    \"shippingAddress\": \"<string>\",\n    \"status\": \"<string>\",\n    \"placementTimestamp\": \"<string>\"\n  }\n]"
								},
								{
									"name": "No orders found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/orders/getAll?page=<integer>&size=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"orders",
												"getAll"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>",
													"description": "(Required) page of the order history"
												},
												{
													"key": "size",
													"value": "<integer>",
													"description": "(Required) Number of orders per page"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "{{baseUrl}}/orders/getAll?page=1&size=2",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyb3NoaWxhc2hhdGhhcmFzaW5naGVAZ21haWwuY29tIiwiaWF0IjoxNzI3MzYxNTM0LCJleHAiOjE3MjczNjUxMzR9.zd1kY_Vxsq0g1Wlx8BCKfT_jC_UWJDDHECOhwmyDvaQ",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/orders/getAll?page=1&size=2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders",
										"getAll"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "(Required) page of the order history"
										},
										{
											"key": "size",
											"value": "2",
											"description": "(Required) Number of orders per page"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "{{baseUrl}}/orders/getAll?page=1&size=2",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyb3NoaWxhc2hhdGhhcmFzaW5naGVAZ21haWwuY29tIiwiaWF0IjoxNzI3MzYxNTM0LCJleHAiOjE3MjczNjUxMzR9.zd1kY_Vxsq0g1Wlx8BCKfT_jC_UWJDDHECOhwmyDvaQ",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/orders/getAll?page=1&size=2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders",
										"getAll"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "(Required) page of the order history"
										},
										{
											"key": "size",
											"value": "2",
											"description": "(Required) Number of orders per page"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "{{baseUrl}}/orders/cancel/:referenceNumber(20240926201703-2)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyb3NoaWxhc2hhdGhhcmFzaW5naGVAZ21haWwuY29tIiwiaWF0IjoxNzI3MzYxNTM0LCJleHAiOjE3MjczNjUxMzR9.zd1kY_Vxsq0g1Wlx8BCKfT_jC_UWJDDHECOhwmyDvaQ",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/orders/cancel/:referenceNumber",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders",
										"cancel",
										":referenceNumber"
									],
									"variable": [
										{
											"key": "referenceNumber",
											"value": "20240926201800-2"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Place a new order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"itemName\": \"<string>\",\n  \"quantity\": \"<integer>\",\n  \"shippingAddress\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/orders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": [
						{
							"name": "Order placed successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"itemName\": \"<string>\",\n  \"quantity\": \"<integer>\",\n  \"shippingAddress\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/orders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"referenceNumber\": \"<string>\",\n  \"itemName\": \"<string>\",\n  \"quantity\": \"<integer>\",\n  \"shippingAddress\": \"<string>\",\n  \"status\": \"<string>\",\n  \"placementTimestamp\": \"<string>\"\n}"
						},
						{
							"name": "Invalid input or bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"itemName\": \"<string>\",\n  \"quantity\": \"<integer>\",\n  \"shippingAddress\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/orders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "{{baseUrl}}/orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response should have referenceNumber, itemName, quantity, shippingAddress, status, and placementTimestamp\", function () {\r",
									"    var data = pm.response.json();\r",
									"    pm.expect(data.data).to.have.property('referenceNumber');\r",
									"    pm.expect(data.data).to.have.property('itemName');\r",
									"    pm.expect(data.data).to.have.property('quantity');\r",
									"    pm.expect(data.data).to.have.property('shippingAddress');\r",
									"    pm.expect(data.data).to.have.property('status');\r",
									"    pm.expect(data.data).to.have.property('placementTimestamp');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyb3NoaWxhc2hhdGhhcmFzaW5naGVAZ21haWwuY29tIiwiaWF0IjoxNzI3MzYxNTM0LCJleHAiOjE3MjczNjUxMzR9.zd1kY_Vxsq0g1Wlx8BCKfT_jC_UWJDDHECOhwmyDvaQ",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"itemName\": \"Computer\",\n  \"quantity\": \"5\",\n  \"shippingAddress\": \"312 Deniyaya Matara\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/orders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{baseUrl}}/orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyb3NoaWxhc2hhdGhhcmFzaW5naGVAZ21haWwuY29tIiwiaWF0IjoxNzI3MzYxNTM0LCJleHAiOjE3MjczNjUxMzR9.zd1kY_Vxsq0g1Wlx8BCKfT_jC_UWJDDHECOhwmyDvaQ",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"itemName\": \"Computer\",\n  \"quantity\": \"5\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/orders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080/api/v1"
		}
	]
}